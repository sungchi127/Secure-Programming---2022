from Crypto.Util.number import bytes_to_long, getPrime
import random
import math
import os
from Crypto.Util.number import long_to_bytes
p = 92017932396773207330365205210913184771249549355771692523246399384571269833668487945963934319507538171501041280674304304879328757539798699280378034748542218248740777575679398093116579809607067129824965250071416089841516538588253944223235904445546895574651603636188746948921937704060334290364304972412697492577
enc = 87051682992840829567429886737255563980229964191963649650455667117285375334750716083826527488071966389632402954644144719710970265754062176648776448421065665281172133368294041777397049228273163978348132440822019295870429065335674151133125629968366491582233750452365390672536361224322642295053741696809519283644
hint = 112112804524582393858675176460595338484428048338611753655869733059768929120327158352572131172253127933611583356499525126040647290513660017529498493355846656594143774393256151536590212031416153303085867445488047592792290033548349001067687775149867134619114482370143917491889371548968347491490942978508386339813
k4=pow(4668, 65537, p)
tmp=enc
_pow = [pow(i, 65537, p) for i in range(5001)]
# _inv = [pow(_pow[i], p-2, p) for i in range(5001)]
pow_3002_4000 = set(_pow[3002:4001])
for i in range(2,1001):
    print(i)
    for j in range(1002,2001):
        for k in range(2002 ,3001):
            k0=_pow[i]
            k1=_pow[j]
            k2=_pow[k]
            k3=hint^k0^k1^k2^k4
            if (k3 in pow_3002_4000):
                r4=pow(k4,p-2,p);enc=enc*r4%p
                r3=pow(k3,p-2,p);enc=enc*r3%p
                r2=pow(k2,p-2,p);enc=enc*r2%p
                r1=pow(k1,p-2,p);enc=enc*r1%p
                r0=pow(k0,p-2,p);enc=enc*r0%p
        if(enc!=tmp):break
    if(enc!=tmp):break

flag=long_to_bytes(enc)
print(enc)
print(flag)

    
